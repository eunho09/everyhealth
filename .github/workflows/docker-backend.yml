name: Docker Backend CI/CD
on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle except for test
        run: ./gradlew build -x test
        env:
          SPRING_PROFILES_ACTIVE: ${{ secrets.DOCKER_SPRING_PROFILES_ACTIVE }}
          GOOGLE_CLIENT: ${{ secrets.GOOGLE_CLIENT }}
          GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          FILE_DIR: ${{ secrets.FILE_DIR }}
          GOOGLE_REDIRECT_URL: ${{ secrets.GOOGLE_REDIRECT_URL }}
          JWT_ACCESS_TOKEN_EXPIRE_TIME: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRE_TIME }}
          JWT_REFRESH_TOKEN_EXPIRE_TIME: ${{ secrets.JWT_REFRESH_TOKEN_EXPIRE_TIME }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: everyhealth
          IMAGE_TAG: ${{ github.sha }}
        run: |
          IMAGE_URI="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "Building and pushing: $IMAGE_URI"
          
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Replace image placeholder and render task definition
        id: task-def
        run: |
          echo "Using image: ${{ env.IMAGE_URI }}"
          
          TEMP_TASK_DEF=$(echo '${{ secrets.TASK_DEFINITION }}' | \
            sed "s|{{IMAGE_URI}}|${{ env.IMAGE_URI }}|g")

          echo "$TEMP_TASK_DEF" > temp-task-def.json

          echo "task-definition=temp-task-def.json" >> "$GITHUB_OUTPUT"

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: everyhealth-family-service-zhkbx0eg
          cluster: everyhealth-cluster
          wait-for-service-stability: true